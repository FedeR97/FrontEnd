{"ast":null,"code":"import _asyncToGenerator from \"D:/Argentina Programa/Proyecto-Final/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \"\";\n    this.img = \"\";\n    this.urlperfil = \"\";\n  }\n\n  uploadImage($event, name) {\n    const file = $event.target.files[0];\n    const imgRef = ref(this.storage, `imagenes/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n\n  getImages() {\n    var _this = this;\n\n    const imagesRef = ref(this.storage, 'imagenes');\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n          /*if(this.img == item.name){\r\n            console.log(name)\r\n            this.urlperfil = this.url\r\n          }\r\n          console.log(\"La URL es \" + this.url);*/\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n\n}\n\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\n\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,cAAT,EAAyBC,IAAzB,EAA+BC,GAA/B,EAA6CC,WAA7C,QAAgE,uBAAhE;;;AAKA,OAAM,MAAOC,YAAP,CAAmB;EAKvBC,YAAoBC,OAApB,EAAoC;IAAhB;IAJpB,WAAa,EAAb;IACA,WAAY,EAAZ;IACA,iBAAkB,EAAlB;EAEyC;;EAElCC,WAAW,CAACC,MAAD,EAAcC,IAAd,EAA0B;IAC1C,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAb;IACA,MAAMC,MAAM,GAAGX,GAAG,CAAC,KAAKI,OAAN,EAAc,cAAcG,IAA5B,CAAlB;IACAN,WAAW,CAACU,MAAD,EAAQH,IAAR,CAAX,CACCI,IADD,CACMC,QAAQ,IAAG;MAAE,KAAKC,SAAL;IAAiB,CADpC,EAECC,KAFD,CAEOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;EAGD;;EAEDF,SAAS;IAAA;;IACP,MAAMK,SAAS,GAAGnB,GAAG,CAAC,KAAKI,OAAN,EAAe,UAAf,CAArB;IACAL,IAAI,CAACoB,SAAD,CAAJ,CACCP,IADD;MAAA,6BACM,WAAMC,QAAN,EAAiB;QACrB,KAAI,IAAIO,IAAR,IAAgBP,QAAQ,CAACQ,KAAzB,EAA+B;UAC7B,KAAI,CAACC,GAAL,SAAiBxB,cAAc,CAACsB,IAAD,CAA/B;UACA;;;;;QAKD;MACF,CAVD;;MAAA;QAAA;MAAA;IAAA,KAWCL,KAXD,CAWOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXhB;EAYD;;AA7BsB;;;mBAAZd,cAAYqB;AAAA;;;SAAZrB;EAAYsB,SAAZtB,YAAY;EAAAuB,YAFX","names":["getDownloadURL","list","ref","uploadBytes","ImageService","constructor","storage","uploadImage","$event","name","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","item","items","url","i0","factory","providedIn"],"sourceRoot":"","sources":["D:\\Argentina Programa\\Proyecto-Final\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { getDownloadURL, list, ref, Storage, uploadBytes } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  url: string =\"\";\n  img: string=\"\";\n  urlperfil: string=\"\";\n\n  constructor(private storage: Storage) { }\n\n  public uploadImage($event: any, name: string){\n    const file = $event.target.files[0]\n    const imgRef = ref(this.storage,`imagenes/` + name )\n    uploadBytes(imgRef,file)\n    .then(response => {this.getImages()})\n    .catch(error => console.log(error)) \n  }\n\n  getImages(){\n    const imagesRef = ref(this.storage, 'imagenes')\n    list(imagesRef)\n    .then(async response =>{\n      for(let item of response.items){\n        this.url = await getDownloadURL(item);\n        /*if(this.img == item.name){\n          console.log(name)\n          this.urlperfil = this.url\n        }\n        console.log(\"La URL es \" + this.url);*/\n      }\n    })\n    .catch(error => console.log(error))\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}