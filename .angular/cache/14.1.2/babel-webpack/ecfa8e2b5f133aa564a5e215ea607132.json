{"ast":null,"code":"import _asyncToGenerator from \"D:/Argentina Programa/Proyecto-Final/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport let ImageService = /*#__PURE__*/(() => {\n  class ImageService {\n    constructor(storage) {\n      this.storage = storage;\n      this.url = \"\";\n      this.img = \"\";\n      this.urlperfil = \"\";\n    }\n\n    uploadImage($event, name) {\n      const file = $event.target.files[0];\n      const imgRef = ref(this.storage, `imagenes/` + name);\n      uploadBytes(imgRef, file).then(response => {\n        this.getImages();\n      }).catch(error => console.log(error));\n    }\n\n    getImages() {\n      var _this = this;\n\n      const imagesRef = ref(this.storage, 'imagenes');\n      list(imagesRef).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          for (let item of response.items) {\n            _this.url = yield getDownloadURL(item);\n            /*if(this.img == item.name){\r\n              console.log(name)\r\n              this.urlperfil = this.url\r\n            }\r\n            console.log(\"La URL es \" + this.url);*/\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(error => console.log(error));\n    }\n\n  }\n\n  ImageService.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n  };\n\n  ImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImageService;\n})();","map":null,"metadata":{},"sourceType":"module"}